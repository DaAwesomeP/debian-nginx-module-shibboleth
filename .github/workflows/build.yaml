name: Build
on: 
 - push

jobs:
  build-package:
    name: 'Build Packages Debian ${{ matrix.os.release }} Nginx ${{ matrix.nginx-branch.name }}'
    strategy:
      fail-fast: false
      matrix:
        os:
          - { release: buster,   arch: amd64, image: "debian:buster"   }
          - { release: bullseye, arch: amd64, image: "debian:bullseye" }
        nginx-branch:
          - { name: stable,   repo-path: ""          }
          - { name: mainline, repo-path: "mainline/" }
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.os.image }}
    steps:
      - name: Update APT for repo dependencies
        run: apt-get update -y
      - name: Install Nginx repo dependencies
        run: apt-get install -y curl gnupg2 ca-certificates lsb-release debian-archive-keyring
      - name: Add Nginx repo key
        run: >
          curl https://nginx.org/keys/nginx_signing.key | gpg --dearmor | tee /usr/share/keyrings/nginx-archive-keyring.gpg > /dev/null &&
          gpg --import-options show-only --import /usr/share/keyrings/nginx-archive-keyring.gpg &&
          gpg --with-colons --import-options show-only --import /usr/share/keyrings/nginx-archive-keyring.gpg &&
          rm -rf ~/.gnupg
      - name: Add Nginx repo
        run: >
          echo "deb [signed-by=/usr/share/keyrings/nginx-archive-keyring.gpg] http://nginx.org/packages/${{ matrix.nginx-branch.repo-path }}debian `lsb_release -cs` nginx" | tee /etc/apt/sources.list.d/nginx.list &&
          printf "Package: *\nPin: origin nginx.org\nPin: release o=nginx\nPin-Priority: 900\n" | tee /etc/apt/preferences.d/99nginx
      - name: Update APT for Nginx repo
        run: apt-get update -y
      - name: Show Nginx APT versions
        run: >
          apt-cache show nginx &&
          apt-cache showpkg nginx
      - name: Extract Nginx APT versions
        run: >
          apt-cache showpkg nginx | sed -rn 's/^([0-9]+[0-9.]*)-[0-9]+[0-9.]*~${{ matrix.os.release }} \(\/var\/lib\/apt\/lists\/nginx.org.*\)$/\1/p' | tee nginx-versions-debian_${{ matrix.os.release }}-${{ matrix.nginx-branch.name}}_orig.txt &&
          sha256sum nginx-versions-debian_${{ matrix.os.release }}-${{ matrix.nginx-branch.name}}_orig.txt
      - name: Skip minor releases prior to this build tool's creation (1.20+ only)
        run: >
          cat nginx-versions-debian_${{ matrix.os.release }}-${{ matrix.nginx-branch.name}}_orig.txt | sed -r '/^(0\.[0-9]+|1\.([0-9]|1[0-9]))\..*$/d' | tee nginx-versions-debian_${{ matrix.os.release }}-${{ matrix.nginx-branch.name}}.txt &&
          sha256sum nginx-versions-debian_${{ matrix.os.release }}-${{ matrix.nginx-branch.name}}.txt
      - name: Fetch Nginx pkg-oss
        run: >
          curl https://hg.nginx.org/pkg-oss/raw-file/default/build_module.sh --output build_module.sh &&
          chmod a+x build_module.sh &&
          sha256sum build_module.sh
      - name: Install git
        run: apt-get install -y git
      - name: Clone nginx-module-shibboleth
        run: >
          git clone https://github.com/nginx-shib/nginx-http-shibboleth nginx-http-shibboleth
      - name: Find latest nginx-module-shibboleth
        id: nginx-module-shibboleth-latest-release
        run: >
          cd nginx-http-shibboleth &&
          echo "::set-output name=tag::$(git describe --tags --abbrev=0 | tee ../nginx-module-shibboleth-tag-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt)" &&
          echo "::set-output name=version::$(git describe --tags --abbrev=0 | sed -e '/v/s/^.//' | tee ../nginx-module-shibboleth-version-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt)" &&
          cd ../ &&
          sha256sum nginx-module-shibboleth-tag-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt &&
          sha256sum nginx-module-shibboleth-version-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
      - name: Checkout latest nginx-module-shibboleth
        run: >
          cd nginx-http-shibboleth &&
          git checkout ${{ steps.nginx-module-shibboleth-latest-release.outputs.tag }} &&
          cd ../
      - name: Build nginx-module-shibboleth versions
        shell: bash
        run: |
          while IFS="" read -r THIS_NGINX_VERSION || [ -n "$THIS_NGINX_VERSION" ]; do
            printf "\n----------\nSTARTING BUILD: Nginx $THIS_NGINX_VERSION module ${{ steps.nginx-module-shibboleth-latest-release.outputs.version }}\n----------\n\n"
            ./build_module.sh --non-interactive --force-dynamic -v $THIS_NGINX_VERSION --module-version ${{ steps.nginx-module-shibboleth-latest-release.outputs.version }} -o build-module-artifacts  nginx-http-shibboleth
            rm -rf /tmp/build_module.sh.*
            printf "\n----------\nFINISHED BUILD: Nginx $THIS_NGINX_VERSION module ${{ steps.nginx-module-shibboleth-latest-release.outputs.version }}\n----------\n\n"
          done < nginx-versions-debian_${{ matrix.os.release }}-${{ matrix.nginx-branch.name}}.txt
      - name: SHA256 build artifacts
        shell: bash
        run: find . -type f -exec sha256sum {} \;
        working-directory: build-module-artifacts
      - name: Upload build artifacts (this build)
        uses: actions/upload-artifact@v2
        with:
          name: build-module-artifacts-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}
          path: |
            ./build-module-artifacts/*
            nginx-versions-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
            nginx-module-shibboleth-tag-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
            nginx-module-shibboleth-version-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
      - name: Upload build artifacts (this OS release)
        uses: actions/upload-artifact@v2
        with:
          name: build-module-artifacts-debian_${{ matrix.os.release }}
          path: |
            ./build-module-artifacts/*
            nginx-versions-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
            nginx-module-shibboleth-tag-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
            nginx-module-shibboleth-version-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
      - name: Upload build artifacts (this Nginx branch)
        uses: actions/upload-artifact@v2
        with:
          name: build-module-artifacts-nginx_${{ matrix.nginx-branch.name }}
          path: |
            ./build-module-artifacts/*
            nginx-versions-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
            nginx-module-shibboleth-tag-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
            nginx-module-shibboleth-version-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
      - name: Upload build artifacts (all combined)
        uses: actions/upload-artifact@v2
        with:
          name: build-module-artifacts
          path: |
            ./build-module-artifacts/*
            nginx-versions-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
            nginx-module-shibboleth-tag-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
            nginx-module-shibboleth-version-debian_${{ matrix.os.release }}-nginx_${{ matrix.nginx-branch.name }}.txt
  publish-packages:
    needs: [build-package]
    runs-on: ubuntu-latest
    container:
      image: debian:bullseye
    steps:
      - name: Update APT for reprepro
        run: apt-get update -y
      - name: Install reprepro
        run: apt-get install -y reprepro
      - uses: actions/download-artifact@v2
        with:
          name: build-module-artifacts
          path: artifacts
      - name: Display structure of artifacts
        run: ls -R
        working-directory: artifacts
      - name: Checkout existing repo
        uses: actions/checkout@v2
        with:
          ref: gh-pages
          path: gh-pages
      - name: Display existing structure of gh-pages
        run: ls -R
        working-directory: gh-pages
      - name: Create initial folders if not exist
        run: >
          mkdir -p packages/debian/conf &&
          mkdir -p packages/mainline/debian/conf
      - name: Create or update distribution files
        shell: bash
        run: |
          for filepath in ./artifacts/*.txt; do
            [ -e "$filepath" ] || continue
            THIS_FILENAME=$(basename "$filepath" .txt)
            printf "$THIS_FILENAME\n"
          done